// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/collection.tmpl
// template/enum.tmpl
// template/node.tmpl
// template/pagination.tmpl
// template/pagination_test.tmpl
// template/transaction.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateCollectionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x5f\x6f\xdb\x36\x10\x7f\x16\x3f\xc5\x4d\xf0\x83\x65\x38\x74\xda\xb7\x64\xf0\x43\x16\xa4\x45\x81\x2e\x43\xd7\x02\x7b\x1c\x68\xf2\x24\x11\xa3\x49\x85\xa4\xd2\x18\x02\xbf\xfb\x40\x8a\xb2\x6c\x37\x1b\x02\x34\x0f\xb1\x78\xf7\xbb\xbb\xdf\xfd\x1d\x86\xcd\x8a\xdc\x9b\xee\x60\x65\xd3\x7a\x78\x7f\xfd\xee\xe6\xaa\xb3\xe8\x50\x7b\xf8\xc0\x38\xee\x8c\xf9\x07\x3e\x69\x4e\xe1\x4e\x29\x48\x20\x07\x51\x6f\x9f\x51\x50\xf2\xad\x95\x0e\x9c\xe9\x2d\x47\xe0\x46\x20\x48\x07\x4a\x72\xd4\x0e\x05\xf4\x5a\xa0\x05\xdf\x22\xdc\x75\x8c\xb7\x08\xef\xe9\xf5\xa4\x85\xda\xf4\x5a\x10\xa9\x93\xfe\xf3\xa7\xfb\x87\xc7\xaf\x0f\x50\x4b\x85\x90\x65\xd6\x18\x0f\x42\x5a\xe4\xde\xd8\x03\x98\x1a\xfc\x49\x30\x6f\x11\x29\x59\x6d\x42\x20\x64\x18\x40\x60\x2d\x35\x42\xc9\x8d\x52\xc8\xbd\x34\xba\x84\x10\xa2\xc6\xe3\xbe\x53\xcc\x23\x94\x2d\x32\x81\xb6\x84\x45\xd4\x10\xb9\xef\x8c\xf5\xb0\x24\x45\xc9\x8d\xf6\xf8\xe2\x4b\x42\x8a\xb2\x91\xbe\xed\x77\x94\x9b\xfd\xe6\xe6\x46\xa0\x93\x8d\x76\x9b\xe6\x49\x35\xa8\x37\x8d\x65\x5d\xfb\xa4\x4a\x52\xa5\x98\x96\xe9\x06\x61\xa1\x63\xda\xb7\x5b\x58\xd0\x47\x23\xd0\x41\x66\xb4\x40\xd1\xa0\x8b\x0a\x21\xb9\xcf\x64\xb2\x49\x54\x25\x93\x68\x4b\x1f\x12\x30\x04\x52\x0c\x03\xc8\x1a\x16\x4c\x6b\xe3\x59\x4c\x22\x81\x22\x9a\xde\x1d\x65\x8e\x3e\x68\xff\xf1\xcb\xe7\x64\xf1\xa3\x09\xfd\x4d\x6a\x31\xea\x5e\x51\xfe\xce\xba\x4e\xea\x06\x42\x18\x06\xa8\x99\x54\x50\xee\x22\x9e\x69\x01\xfb\xac\x9b\xe1\x0e\x98\x45\xd8\xf7\xbe\x67\x4a\x1d\x00\x5f\xb8\xea\x9d\x7c\xc6\x72\xb4\xc7\xd3\x40\x39\xdf\x2d\x38\xf4\xd3\x63\xa4\xfe\xc8\xf6\x08\x4b\x25\x5d\x96\xd3\x6f\x87\xee\x15\x69\x14\x54\xd5\x31\xab\xa3\xf3\x9c\xc4\xc4\x2e\x56\xe4\xd5\x84\x7e\x86\xc7\xe4\xfd\xc7\xf0\xf3\xe7\xfc\x95\xda\x6b\x91\xa3\x7c\x46\x3b\xf7\xf1\xcf\x49\x32\x82\x17\x4f\x3d\xda\xc3\xac\xfe\x12\x9f\x29\x5a\x08\x64\xb3\x81\xfb\x71\x54\x3f\x48\x54\xc2\x81\x47\xa5\x5c\x9a\xfb\x64\x76\xb5\xeb\xa5\x4a\xdb\x63\x00\x59\x83\x56\x1d\x40\x19\x26\x80\x1b\xad\x91\x7b\x14\xa0\xd3\xb4\xed\x0e\x71\x1b\x8d\x8a\x71\xf3\x1c\x53\x52\xf7\x9a\xc3\xf2\x8c\x65\x08\xb0\x9a\x49\x85\x50\x9d\xc7\x5f\x72\xff\x72\xb4\xbf\x1f\x7f\xd7\xe0\x98\x97\xae\x96\xe8\x80\x52\xea\xbc\x4d\x15\x3a\x73\x03\x03\x29\x64\x0d\x35\x8f\x79\xe6\xfd\xa0\x1f\x71\xf4\x9a\xfd\x44\xdf\xd5\xaf\x11\xf3\xcb\x16\xb4\x54\xd1\xa6\xb8\x24\xb7\x85\x0b\x09\xe5\x27\xfc\x96\x27\xae\xff\xe8\xd0\xa6\xde\x9f\xba\x5f\x43\xcd\x69\x82\x9e\xb0\xa6\x94\x56\xa4\x08\xa4\xb0\xe8\x7b\xab\x2f\x23\x90\x40\xde\x56\xa9\x33\x26\xb1\x50\xab\x89\xce\x25\x97\x35\xd4\x11\x74\xac\x44\xae\x31\x8a\x4b\x6a\xff\x5b\xd0\x61\xb8\x82\xef\xd2\xb7\xd3\xf8\xa6\x99\xac\x8d\x85\xbf\x27\xff\xb7\xdb\x7c\x4a\x2e\x02\xcd\xcd\xcc\x48\xfa\x15\xf3\x3d\x74\x27\xd1\xab\xd4\x82\xc2\x7d\x97\x9e\xb7\x19\x98\x26\x33\x89\x53\xfc\xe9\xb8\xb1\x3d\xae\x61\xf1\xcc\x54\x3f\x1e\x33\x9a\x37\xad\x28\x38\x73\x08\xf3\x4d\x93\x13\x2c\xa2\xa4\x16\xf8\x72\x34\x7b\x37\x9e\x0b\x59\x43\xe3\x61\x21\xe1\x1a\x42\x58\xc3\x71\x9f\xca\x98\xff\x68\x3a\x3e\x46\xf1\xed\x18\xe6\x0d\x93\xf2\x97\xf4\xed\x30\x40\xc7\x1c\x67\x6a\xe4\x0c\x21\x2c\x63\x6f\x97\x63\x5d\x57\xb3\x7a\x79\xce\xed\x3a\xae\x7c\x5a\xcd\x5c\x94\xf8\x97\x8c\xe8\x65\xdb\x73\x49\xab\x8c\x0a\xd5\xb1\x58\xf3\x21\x8c\xff\x02\x39\x13\xfe\xf7\xf0\xbd\x76\x5b\xfe\x0d\x00\x00\xff\xff\x0f\x9c\x85\xe3\x90\x07\x00\x00")

func templateCollectionTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateCollectionTmpl,
		"template/collection.tmpl",
	)
}

func templateCollectionTmpl() (*asset, error) {
	bytes, err := templateCollectionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/collection.tmpl", size: 1936, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateEnumTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xd1\x4e\xe3\x3a\x10\x7d\x4e\xbe\x62\x88\x8a\x94\x54\xd4\xe1\xf2\x76\xef\x55\x1f\x58\x54\x58\x24\x76\xb5\x08\x76\xf7\x11\x99\x78\xdc\x5a\x75\xec\xee\xd8\x29\x42\x51\xfe\x7d\x65\x27\x2d\x29\xb0\x2b\xde\xdc\x9e\x33\x67\xce\xcc\x9c\xb4\x6d\x39\x4d\x2f\xec\xe6\x99\xd4\x72\xe5\xe1\xec\xf4\x9f\x7f\x67\x1b\x42\x87\xc6\xc3\x25\xaf\xf0\xd1\xda\x35\x5c\x9b\x8a\xc1\xb9\xd6\x10\x49\x0e\x02\x4e\x5b\x14\x2c\xbd\x5f\x29\x07\xce\x36\x54\x21\x54\x56\x20\x28\x07\x5a\x55\x68\x1c\x0a\x68\x8c\x40\x02\xbf\x42\x38\xdf\xf0\x6a\x85\x70\xc6\x4e\x77\x28\x48\xdb\x18\x91\x2a\x13\xf1\x9b\xeb\x8b\xc5\xd7\xbb\x05\x48\xa5\x11\x86\xff\xc8\x5a\x0f\x42\x11\x56\xde\xd2\x33\x58\x09\x7e\xd4\xcc\x13\x22\x4b\xa7\x65\xd7\xa5\x69\xdb\x82\x40\xa9\x0c\x42\x56\xa3\xe7\x25\x17\x42\x79\x65\x0d\xd7\xe5\x92\xf8\x66\xf5\x4b\xcf\xd0\x34\x75\x06\x03\x99\xb8\x59\x22\x4c\x24\xfc\x37\x87\x09\x5b\x98\xa6\xbe\x54\xa8\x85\x0b\x78\xd2\xb6\x30\x09\xec\x00\x7a\x52\xf5\x37\x5e\xad\x79\xa4\xb3\xfb\xe7\x0d\xb2\x3b\x4f\xca\x2c\x61\xc2\x76\xc0\xac\xaf\x9a\x81\x92\x60\xac\x0f\xc4\xcf\xdc\x5d\xd9\xc0\x8e\x8a\x51\x92\xb0\x42\xb5\x45\x0a\xb2\xfb\xf7\x44\xb2\x4f\x8d\xd2\x02\x29\x1a\xe8\xa5\x92\xb2\x84\x2f\x9c\xdc\x8a\xeb\xab\xdb\x1b\x50\xf5\x46\x63\x8d\xc6\x3b\x18\x86\x61\x03\x8a\x04\xca\x78\x24\xc9\x2b\x64\x69\x92\xc8\xc6\x54\x90\x1f\x34\xeb\x3a\xd8\xcf\xd3\x75\xc5\x48\x37\x7f\x02\x65\xd9\x4f\x52\x1e\xa9\x80\x36\x4d\x92\x64\xf7\xbb\x9f\x30\x7f\x3a\x01\xe7\xa9\xb2\x66\xcb\x6e\x1b\xeb\xf1\xb5\xf2\xb0\x89\xbc\x28\x8a\x34\x49\xba\xb4\x77\xfe\xdd\xd4\x7f\xf5\xbe\xc7\x3f\xe6\x7e\x7a\x60\x7f\x2c\x9e\x6f\xb9\x7e\x51\x68\xbb\x02\x90\xc8\x52\x3f\x8a\xf3\x74\x02\x76\x1d\x96\xbd\xe5\x9a\xe5\x2e\x5a\x2d\xe2\x94\x12\x8e\xec\xba\xa7\x25\x84\xbe\x21\x03\xb2\xf6\x6c\x11\xaa\x65\x9e\xc5\x66\xc7\xf7\x50\x37\xce\xc3\x23\x02\x87\xbe\x38\x3b\x09\x52\x51\x22\x1c\x29\x99\xbe\xb6\x3a\x1f\xaf\x3a\x74\xdc\xb5\x43\x8a\x57\x0f\xa8\x64\x3f\xb8\x56\x82\x7b\x1b\x4a\xf2\xd7\x1a\xc5\xff\x91\x7c\x34\x07\xa3\xf4\x9f\x2d\x1e\xbb\xf0\x99\x85\xac\xf1\xe0\x49\x89\x71\xe7\x2c\x9e\xed\xc5\xe7\x50\x6f\x94\x8e\x57\x8a\x49\x45\xed\x86\x68\x6e\x39\x41\x1e\x68\x65\x39\x16\xe9\xa7\xdf\x9f\xef\x6d\xf2\xc2\xc5\x92\x87\x77\x12\x79\xb8\x85\x2c\x2b\x3e\x2e\x3e\x8a\x46\x94\x87\x87\x77\x53\x33\x87\xfc\x20\x15\xb9\x51\xf1\x2c\xc5\x30\x9b\x11\x61\xb4\xb6\x7d\xfb\xfa\x1d\x00\x00\xff\xff\x0a\xcf\x5e\x8f\xec\x04\x00\x00")

func templateEnumTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateEnumTmpl,
		"template/enum.tmpl",
	)
}

func templateEnumTmpl() (*asset, error) {
	bytes, err := templateEnumTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/enum.tmpl", size: 1260, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateNodeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x6d\x6f\x1b\x37\xf2\x7f\x2d\x7d\x8a\xf9\xeb\xef\x04\xbb\x86\xc2\x8d\x7b\xaf\xce\xad\x0f\xc8\xc5\x09\x20\xa0\x97\xb4\x75\x70\x7d\x11\x04\x2d\xb5\x9c\x95\x78\x59\x91\x1b\x92\x92\x6d\xa8\xfa\xee\x87\x19\x92\xab\xd5\x83\xdb\x06\xb8\x3b\xbf\xf1\x2e\x39\x33\x9c\x87\xdf\x3c\x70\xb5\xdd\x56\x97\xe3\xd7\xb6\x7b\x74\x7a\xb1\x0c\xf0\xcd\xcb\xab\xbf\xbe\xe8\x1c\x7a\x34\x01\xde\xca\x1a\xe7\xd6\x7e\x86\x99\xa9\x05\xbc\x6a\x5b\x60\x22\x0f\xb4\xef\x36\xa8\xc4\xf8\xc3\x52\x7b\xf0\x76\xed\x6a\x84\xda\x2a\x04\xed\xa1\xd5\x35\x1a\x8f\x0a\xd6\x46\xa1\x83\xb0\x44\x78\xd5\xc9\x7a\x89\xf0\x8d\x78\x99\x77\xa1\xb1\x6b\xa3\xc6\xda\xf0\xfe\xf7\xb3\xd7\x6f\xde\xdd\xbd\x81\x46\xb7\x08\x69\xcd\x59\x1b\x40\x69\x87\x75\xb0\xee\x11\x6c\x03\x61\x70\x58\x70\x88\x62\x7c\x59\xed\x76\xe3\xf1\x76\x0b\x0a\x1b\x6d\x10\x26\xc6\x2a\x9c\xc0\x6e\x47\x6b\x17\xdd\xe7\x05\x5c\xdf\xc0\x5c\x7a\x84\x0b\xf1\xda\x9a\x46\x2f\xc4\x0f\xb2\xfe\x2c\x17\x98\x68\x02\xae\xba\x56\x06\x84\xc9\x12\xa5\x42\x37\x81\x0b\x48\x22\x75\x03\x86\xf8\xee\x82\x75\x72\x81\xe2\x9d\x5c\x21\x4c\xfc\x97\x96\xe5\x8f\xb6\x5b\x68\xa4\x6e\xe3\x91\xe0\xf0\xcb\x5a\x3b\xf4\x70\xf7\xe3\xf7\xe0\x23\x47\xd6\x03\x8d\x4a\x32\xab\x4b\x78\x63\xfc\xda\x21\xc8\xb6\x05\xad\x20\x3c\x76\xe8\x61\x29\x37\xc8\x26\x7b\x3a\x82\xd6\x80\x0d\x23\x1b\xb4\xfa\x40\xef\xd7\x37\x70\x21\x66\xb7\xfc\x1c\x77\x74\x03\x8b\x00\x45\x8b\x06\x2e\xc4\x3b\xab\xd0\x97\xf0\x32\x6b\x96\xd9\x6e\xa0\xd0\x46\xe1\x43\x26\x81\x97\xa5\x98\xdd\x8a\x2c\x86\x48\x9d\x34\x0b\x84\x0b\x43\x47\x14\x9e\xa2\xd3\x13\x5f\x95\x4c\x34\xda\x3b\x23\x8a\x8d\xfc\x17\x26\x8b\xda\xcb\x1b\x1d\xb9\x45\x59\xf4\x60\x6c\x00\xbf\xee\x3a\xeb\x02\xac\xd6\x6d\xd0\x1d\x05\x39\x19\x3f\xe9\x8f\x48\x6e\x1a\x3c\x0e\x7c\xa7\x57\xcc\x5e\xd0\xf6\x8b\x03\x9d\xb3\xb2\x2c\x66\x42\xb6\x9f\x46\xba\xa2\x65\x33\x58\x98\x44\x39\xfb\x23\x5f\xc0\xbd\x0e\x4b\xb8\xe8\x12\x09\x09\x4e\xc6\xfe\xf0\x79\xf1\x83\x0c\xcb\xc1\x01\xdd\x13\x72\xca\xa1\x9e\x93\x85\x0e\xcb\xf5\x5c\xd4\x76\x55\x35\x29\x91\x2a\x34\xa1\x52\x5a\xb6\x58\x87\x8a\x90\xf4\xe7\xc8\x2a\x5f\x2f\x71\x25\x8f\xa8\x97\xd2\x2f\x75\x6d\x5d\x57\x2d\xec\x0b\xf6\x2b\x3a\x67\x1d\x53\xd9\x56\x9a\x85\xb0\x6e\x51\x3d\x54\xfe\xd1\xd4\x95\xc7\x95\xec\x96\xd6\xe1\x13\x47\x6a\x53\xaf\xe7\x32\x58\x47\x67\xbf\xa8\xad\x09\x4e\xcf\xe9\x79\x41\x5a\x96\xe3\x71\x55\x01\xf9\xd9\xc1\xbd\x93\x9d\x67\xb4\xce\xa5\xd7\x35\xaf\xc2\x0a\xc3\xd2\x2a\x31\x66\xec\x46\x3a\x6d\x02\x3a\x12\x0f\xdb\xf1\x88\x96\x0a\x92\x8a\x0f\x81\xc2\x43\xff\x4b\x28\x2e\x69\x7d\x0a\xac\x77\x39\xde\xf5\xa7\xe4\x12\xb0\x70\xb2\x5b\x0e\xa4\x82\x0f\x6e\x5d\x07\x92\x38\xbb\x85\x11\x00\x0c\xb0\xbe\xdb\xc1\xaf\xff\xf2\xd6\x5c\x4f\xb4\x9a\xda\x95\x0e\xb8\x0a\x8f\x93\x5f\xa1\xaa\x80\xb1\xa8\x95\x18\x8f\x98\x12\x48\x8e\x36\x0b\x80\xcc\x41\x27\x24\x9e\x8e\x99\xa0\x67\xa3\x2d\x31\x1e\xbd\xd5\xd8\x2a\x0f\x1f\x3f\x5d\xf2\x53\x66\x6c\x78\xf9\x80\x35\x33\xc6\x2d\x31\x1e\xbd\x51\x0b\xf4\x40\xac\xf4\xd4\x9f\x89\xb4\x7c\x78\x68\x66\xe5\x2d\x91\x1c\x12\xcf\xb3\x0d\x48\xde\x4c\xee\x88\xab\x7b\x7f\x44\xc3\x92\x5d\x4f\x5a\x55\x55\x51\xad\x6c\x15\xd7\xb4\x23\x2e\x23\x57\x4f\x71\xd1\x16\x14\xd2\x53\x7c\xe2\xd1\xa5\x18\x8f\xfe\x29\xdb\x35\x1e\x09\xd9\xd0\xda\xb1\x5b\x22\x89\x6e\x34\x2a\x60\x82\x6c\x62\xf4\xd0\x1c\xc3\x3d\xa2\x81\x70\x6f\xd9\x52\x9f\x4c\x65\xaf\x1d\x59\xfa\x87\x01\xac\x2a\xf6\xe2\x81\xa1\xc7\x4c\x27\x96\x66\x26\xda\x10\x84\x31\x0e\xdb\x13\x18\x7b\x22\x76\x5a\x79\x28\xee\x97\xe8\x30\xf6\x2b\x16\xd8\x59\x6d\x02\x04\x5b\xb2\xc5\xdc\x08\x5a\x6b\x3b\xb0\x1b\x74\xdc\x0b\x62\x23\x90\x46\x81\x54\x0a\xf4\xaa\x6b\x71\x45\x2d\x98\xb2\x20\x65\x44\x4a\x27\xd1\xf7\x86\xa7\xaa\x20\xe9\xeb\xb0\x46\x4d\xc2\x69\xcf\x88\x9f\xf2\x2b\xed\x37\x6b\x53\x43\x71\x40\xb5\xdb\xc1\x65\xac\x91\xec\xa8\xdd\xae\x84\x98\xb2\xe1\x01\x4e\xd3\x96\xed\xdc\xe7\x6e\xca\x5f\x8a\xcd\x88\xb7\x6e\xe0\x39\x6d\xd2\xfb\x68\x76\x7b\x0d\x47\x47\x89\xd9\xed\x94\xb6\xc8\xa3\xd7\x30\x39\x38\x77\xc2\x3b\x31\xd9\xae\x61\x25\x3f\x63\x91\x53\x6e\x4a\x72\xb8\xdd\x19\x91\xb2\x71\xb7\x2b\x99\x9e\xf1\xb3\x27\xa7\xd7\x21\x75\x84\x57\x22\x8e\xdd\x26\xd7\xfb\x81\x28\x12\xb4\x91\x0e\xe6\xeb\x06\x3e\x7e\x9a\x3f\x06\x8c\xfd\xac\x6f\x37\x7a\x0a\x17\x4d\x72\xe8\x01\xd7\x48\x37\xc4\x15\x9d\x71\x03\x04\x10\xf1\x0f\xe9\xfc\x52\xb6\xc7\x6e\x16\xdb\x2d\x74\xd2\xd7\xb2\x85\x8b\xa6\x77\xf6\xb7\xcc\xf9\x7f\x37\x60\x74\xcb\x6e\x1c\x8d\x46\x0e\xc3\xda\x19\x5a\x61\xb9\xbc\x18\x4f\xe3\x2a\x10\x15\xf8\xc8\xd8\x84\xdd\xee\x13\x39\x9d\xd7\x12\x7b\x74\x6e\xf4\x6e\x93\x1b\x74\xf4\xee\x88\xb3\x61\xbf\x79\xe0\xfa\x51\x4c\xe7\xeb\x94\x2c\xc5\x7c\xdd\x44\x1f\x8f\x76\xd9\x1d\xb9\x6b\x9e\xbe\x64\x9f\x66\x87\x9f\x71\x20\x26\x07\x0e\x49\xa2\x45\xbc\x72\x68\x10\x2d\x1d\xd8\xc3\x1a\xc7\x79\xe3\x58\xed\x68\x53\x22\x38\xdc\x8b\x87\x90\x22\xba\xe9\xdb\xfa\xbb\xf5\x0a\x9d\xae\xb3\x0a\x67\x75\x10\xb3\x5b\x9f\xa3\x7a\x2e\x90\x8e\xb2\x7a\xf2\xe3\x1a\xdd\xe3\x04\x8a\x1c\xd7\x78\x3c\xcd\x4e\x05\x95\x47\xfe\xbb\x43\x6a\xe6\xc5\x40\xfd\xfd\x30\x12\x63\x39\xbb\xed\x89\x07\x18\x49\xca\xde\xc5\xca\xb5\xdb\x79\x4a\xc9\xb2\xb7\x07\x5b\x8f\xbd\x05\xff\x73\x3d\xef\x6a\x69\x48\x9f\x29\x3c\x7f\xca\x7b\x03\x55\x33\x50\x38\x5d\xbe\x02\xef\x4f\x43\x2e\xb3\x70\x21\x32\xba\x1d\x8f\x4e\xe7\xed\x57\x4a\x71\x11\xe5\xc2\x24\x3b\x0d\xc1\xf2\x7b\xdd\x6a\xaa\xaf\x5c\x4b\x63\x41\xac\xe1\xf2\x35\x2f\x3e\x5d\xfb\xa6\x34\xb6\x1e\xb4\x83\xe3\x21\x86\xac\x31\x11\x32\xd7\x37\x50\x73\x55\x76\xd1\x47\x5a\x95\xe3\x33\xa6\x9f\xd8\xbd\x1b\xf7\x6b\x22\x2b\xc2\xc3\x11\x15\x27\x74\x8e\xd6\x66\x66\x23\x5b\xad\x66\xb7\xb1\xd6\x86\xb7\x74\x99\x7a\x43\x1a\x6c\xe3\x15\x68\x3f\x4b\xbd\xef\x82\xb6\x86\x9a\x8c\xbd\xf7\x64\x50\xa3\x17\x6b\x46\x53\xee\x2d\x0e\xf0\x01\xeb\x35\x93\xad\x3d\xed\x90\x43\xe8\x55\xb6\x60\x99\xdd\x0f\x86\xb0\x24\x90\x68\xa2\xed\x71\xc1\xc7\x21\xf1\x67\x1d\x96\xb4\x18\xbb\x34\x86\x38\x2a\xf2\x1b\xdf\xe0\x52\x24\x0a\x2d\x50\xf0\x6b\x90\xf3\x16\x29\x2a\x5f\x08\x9e\xa5\x20\x21\xb3\x06\xee\x65\xbc\x38\x74\xce\x6e\xb4\x42\x35\x1d\x10\xdf\xeb\xb6\x85\x39\x82\x42\xa7\x37\xa8\xa0\x71\x76\xc5\xdb\x6b\x43\xa8\xf7\xb2\x7d\xa1\x15\xc9\xc9\xd6\xca\xe8\x02\x0f\x0a\x7d\xed\xf4\x1c\x15\x68\x73\x0d\xcb\x10\x3a\x7f\x5d\xf1\x98\x6b\x85\xb6\x95\xb2\xb5\xaf\x56\x7a\xe1\x64\xc0\xea\xff\x87\xd2\xbc\x88\x28\x19\x9a\x57\x84\x54\x24\xcb\xa1\x5f\xb6\x7d\xf8\xd8\x43\x16\x0e\x7c\xc4\x21\xb7\x22\x5d\xce\x02\x45\xfb\x38\x54\x1e\x96\x96\x7a\x0b\xa3\xf4\xc0\x80\xc6\xba\xe3\x80\x9d\xc4\xc5\x0f\x26\xa5\xaa\x3a\xe3\xf8\x78\x97\x88\x9e\x2c\xc5\xc1\x38\x35\x50\xc5\x41\x34\xc2\x83\x8c\xf3\xc7\xfc\x11\x74\xf0\x34\x44\x53\x74\x32\x74\x98\xf9\x34\x54\x3a\x70\x8c\x48\xd8\xb9\x30\xe9\x34\xfe\x81\xac\x6b\xeb\x14\x63\xd1\x9e\x04\xf0\xd0\x78\xc2\xc5\xb8\xaa\x46\xa3\x93\x9c\x3a\xb3\x38\x05\x34\x41\x1c\xc4\xaa\xc3\x20\x3e\xb0\xcd\xc4\x71\x3e\xe5\xdd\x9f\xcb\xf9\x29\x25\x85\x07\x21\xc4\xde\xed\x25\x14\xbf\x44\x19\xc7\x23\x91\xc2\x06\x5d\xc4\x42\x8c\xbe\x6e\x60\xe6\x73\xce\x16\xe8\xd2\xe4\x94\xca\xf7\xfe\x22\x27\x5e\x75\x1d\x46\x0a\xb6\x67\xf1\xa5\x15\x6f\x62\xfa\xf7\xdc\x5a\x95\x65\x9c\x69\x76\x45\x39\x1e\xa5\x64\xa5\xd2\xf3\x7c\x00\x89\x2d\x0d\x7d\xd6\xc1\x2f\xac\x39\xed\xc6\x86\xcc\x66\x30\x20\xbb\x50\xd8\x9c\xc5\x24\x4d\x37\x7d\xe2\x47\xa8\xde\xc0\x64\xc2\xa4\xbf\xdb\x45\x87\x3c\xb9\x6f\xd6\x82\xa1\xe6\x85\xc9\xa1\xe0\x20\xd5\x42\x11\x2a\x5c\xaa\x8b\xe7\x9b\xc2\x99\x9e\xd0\x37\x81\x7d\xe7\x1b\x52\x35\xab\x20\xb8\x0e\x36\xc5\xa4\x96\x86\x60\xe9\xd0\xdb\x76\x93\x4b\x5d\xf1\x6c\x53\xf2\x9c\x62\xd7\x81\x11\x4d\xf9\x33\xc9\x5a\x0c\xdb\xcb\xbe\x0e\xd7\xac\x7b\x42\xd7\xa1\x8d\xc4\xb6\x1b\x9f\xc2\xc9\x3c\x0d\xa7\x30\x6f\x53\xbe\x9d\x6d\x27\x7b\x10\x25\x00\xf9\x7b\x1d\xea\x25\xb3\x6d\xff\xe0\xf3\x47\x2d\x3d\xc2\xf1\xb7\x8e\x08\xfb\x6b\xf2\xd4\xb0\x33\x1d\x8c\xdd\x82\x67\x83\x3c\x06\xfc\x4c\xb7\x97\xe2\x44\xce\xec\x96\xf1\x26\x86\xd3\xd4\x52\xfa\x0f\xfd\x27\xb4\xda\xb6\x34\x3d\x68\x6b\x26\xfd\x50\xf2\x3a\xae\xc5\x71\x35\x7a\xf0\x68\xe2\x1f\x08\x1c\xcc\x08\xef\x4d\xfb\xd8\xcf\x3a\x5f\x81\x8d\x7e\x3d\x4d\x04\x43\xb1\x0a\x1b\xb9\x6e\xc3\xf5\xf8\x2b\x31\x13\x0b\x17\xb7\x9e\x67\x5f\xae\xe1\xd9\xfd\x84\xa3\x38\x3d\xe9\xc6\x65\xaa\xe7\xf1\x83\xd9\xb9\x1c\xe1\x6a\x1d\x13\x62\x50\xa8\x47\xd6\xd4\x74\x0f\x7f\x34\xb5\x78\x6f\x6a\xba\x78\x78\x5c\x01\xc0\x65\xff\xdd\x46\xfc\x8c\x7a\xb1\x0c\xa8\xc6\x74\x4b\xe1\xe2\x19\xec\x4a\xd7\x82\xc7\x75\x3a\x37\x5f\xec\x02\x5c\xc6\x03\x22\x0a\x73\xca\x9d\x02\x51\xb9\x0d\xa4\xaf\x4c\xe2\xb6\x4f\xc6\x13\x40\x66\xac\x0e\x6e\x79\x51\x7e\x0f\xa6\x20\xbe\xb7\x52\xc5\xe0\x2a\xb7\x29\xc7\x67\x23\x96\x5c\x3e\x99\xe4\x78\x51\xb8\xb4\x7a\x20\x09\xda\x84\x42\xab\xaa\xb8\xfa\xee\xbb\xbf\x7c\x03\x2f\xe0\xaa\x4c\x42\x68\xff\x3b\x78\x09\xbf\xfd\xc6\x8f\x7f\xbb\xa1\x3b\x5d\x91\xed\x3b\x96\xfb\x3b\x91\x8c\xe1\xe3\x48\x6a\x05\xcf\x36\x29\x8c\xdc\x2b\x4e\xa3\x38\x1a\x8c\x97\xf1\xb0\x8f\x5a\x3d\x7c\xea\xa7\xcc\x33\xbe\xce\x2e\xf8\x33\x7e\x2e\xa1\xf8\xf8\xe9\x8c\x5f\x75\x93\xb1\xc1\x5e\x8d\xdf\x48\x58\x70\xf9\x6d\xde\x39\xe3\xd2\x54\x60\x7b\x99\x65\xd2\x93\xad\x08\x82\xc0\x25\x6e\x6d\x91\x7b\x10\x04\x41\xe8\xba\x81\x3d\xb8\xde\xe1\x7d\xc6\x57\x71\x55\xc2\x6e\x10\x42\xd6\xc4\xe3\x4a\xbc\xaa\xf9\x13\x77\x0c\xf3\xd5\x99\x3b\xeb\x69\x46\xd2\xf9\xb1\xff\x45\x11\x3f\x61\x8b\xd2\x63\x71\x55\xfe\xb7\x8c\x3d\x06\x66\xfb\x04\x30\x6f\x06\x82\xf3\xd9\x77\xc1\x3a\xcc\xd8\x3a\x87\x81\x7e\x40\xef\xc3\x9f\x62\xdf\xfe\x07\x62\xef\x68\x3c\xa7\xc6\xed\xbf\xb4\xe2\x27\x7b\xcf\x5d\x7b\xc4\x43\xf1\x14\xa4\x5b\xf0\x26\xed\xdd\x46\x71\x85\x72\x9b\xfe\x39\x55\xe5\x74\x7b\xe3\xaf\x61\xa9\xae\xbe\x75\x76\x55\x10\x1b\x77\x81\x34\xfd\x71\xf3\x4a\xd3\x10\x53\xbd\x77\x0a\xdd\xdf\x1f\x99\xf0\x95\xaf\x8b\x89\x56\x93\xb4\x95\x3a\xc3\x01\x20\xe8\xe8\xb8\xce\xae\x1d\x28\x39\x05\xb2\xe3\x2b\xc1\x41\x2c\xe2\x75\x6b\x3d\xf2\x39\x74\xcf\x49\xf1\xcf\x9e\x3a\x8d\x04\x69\x4a\xf7\xcf\xbb\x56\xd7\x58\x90\x84\x29\x3c\xef\x63\x37\xbc\x07\x1e\xdc\x08\xfb\x1f\x8a\xe2\xfd\xaf\x8a\x1f\x69\x2b\xa9\x94\x8e\x17\x9e\x49\xff\x83\x00\x55\xf0\xf4\x93\xcb\xe1\x98\x53\x55\xb0\xa7\x4f\x9f\x79\x79\x36\xcf\x77\xcc\x1e\x88\x49\xdb\x83\x2e\xb4\x57\xe7\xdf\x01\x00\x00\xff\xff\x7b\x97\xd3\x70\x7b\x1b\x00\x00")

func templateNodeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateNodeTmpl,
		"template/node.tmpl",
	)
}

func templateNodeTmpl() (*asset, error) {
	bytes, err := templateNodeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/node.tmpl", size: 7035, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatePaginationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x3b\x7f\x6f\xdc\xb8\x72\x7f\x4b\x9f\x62\x4e\x70\xfc\x24\x77\x23\x27\x87\xb6\xc0\xed\xeb\x3e\xc0\xb0\x9d\xd4\x45\x9e\x93\x3b\xbb\xef\xfe\x08\x82\xb3\x2c\x51\xbb\x6c\xb4\xe4\x86\xe4\xda\xf1\x6d\xf6\xbb\x17\xc3\x21\x25\x4a\xab\xb5\x9d\xa0\x45\x81\x1a\xb8\xd8\x22\xe7\xf7\x0c\x87\xc3\x21\x6f\xb3\x39\x3e\x8a\x4f\xe5\xea\x41\xf1\xf9\xc2\xc0\xcf\xaf\x5e\xff\xf2\x72\xa5\x98\x66\xc2\xc0\x9b\xa2\x64\xb7\x52\x7e\x86\x0b\x51\xe6\x70\xd2\x34\x60\x81\x34\xe0\xbc\xba\x63\x55\x1e\x5f\x2f\xb8\x06\x2d\xd7\xaa\x64\x50\xca\x8a\x01\xd7\xd0\xf0\x92\x09\xcd\x2a\x58\x8b\x8a\x29\x30\x0b\x06\x27\xab\xa2\x5c\x30\xf8\x39\x7f\xe5\x67\xa1\x96\x6b\x51\xc5\x5c\xd8\xf9\x77\x17\xa7\xe7\x97\x57\xe7\x50\xf3\x86\x81\x1b\x53\x52\x1a\xa8\xb8\x62\xa5\x91\xea\x01\x64\x0d\x26\x60\x66\x14\x63\x79\x7c\x74\xbc\xdd\xc6\xf1\x66\x03\x15\xab\xb9\x60\x90\xac\x8a\x39\x17\x85\xe1\x52\x24\xb0\xdd\xe2\x8c\x61\xcb\x55\x53\x18\x06\xc9\x82\x15\x15\x53\x09\x1c\x00\x21\xbd\x04\x5e\x83\x60\x70\x90\x5f\x19\xa9\x8a\x39\xcb\x2f\x8b\x25\x83\x44\x7f\x69\x2c\x72\xb4\xd9\x40\x5d\xf0\x26\xa4\x0a\x8a\x7d\x59\x73\xc5\x34\x5c\xfd\xfa\x0e\x34\xe1\x39\x56\x2f\x81\x89\xaa\x47\x5b\x1a\x48\x17\x85\xbe\x6e\x45\x28\x65\xd3\xb0\xd2\x8a\x97\x3d\xcd\xa2\xe6\xac\xa9\x20\xc0\x19\xf2\xe1\xcb\x95\x54\x06\x52\xa4\xf3\x12\x54\x21\xe6\x0c\x0e\x04\x4c\x67\x70\x90\x5f\xca\x8a\x69\xcb\x23\x4a\x36\x1b\x38\xc8\x4f\xa5\xa8\xf9\x3c\xff\x50\x94\x9f\x8b\x39\x83\xed\xf6\x18\x87\x45\x30\x90\x10\x1d\x47\x3d\x0b\xe9\x27\x73\x6e\x16\xeb\xdb\xbc\x94\xcb\xe3\xda\x85\xc5\x31\x13\xe6\xb8\xe2\x05\x4a\x77\x8c\x46\xeb\x83\xfd\xf2\x4b\xc5\x34\x9f\x0b\x7d\x3c\xff\xd2\xcc\x99\x38\x9e\xab\x62\xb5\xd8\x01\xbb\x63\x9f\x4d\xb1\x40\x98\x55\xa1\x34\x53\xc7\x77\x3f\xe3\x07\x53\x4a\xaa\x21\xe8\x92\x2f\x0a\xde\x30\x51\xca\xe3\xa5\x9e\xaf\x8a\xf2\xf3\xf1\xdd\xbf\x24\x28\xe9\xf1\x31\xbc\x57\x15\x53\x67\x36\x5e\xd0\x8a\x14\x11\xda\x86\x52\xe5\x47\x35\x06\xd7\xfd\x82\x97\x0b\x30\x12\x24\x62\x40\x01\x0d\xd7\x06\xe3\x8b\x1b\xb6\xd4\x79\x6c\x1e\x56\x6c\x48\x4d\x1b\xc5\xc5\x3c\x8e\x4b\x29\xb4\x35\xc8\x0e\xc3\x13\x5d\x82\x5e\xb1\x92\xd7\x9c\x69\x28\x04\x14\xba\x64\xa2\xe2\x62\x4e\x7c\xf2\x38\xda\x45\x18\x70\x81\x19\x24\x27\x57\xa7\xc9\x08\xf9\x33\xd6\xa7\x0f\x15\x7b\x82\xbe\xc5\x18\x30\x98\x41\x72\x76\x8e\x0c\xc8\x64\xff\x28\x1a\x5e\x61\x60\xa2\x91\xc8\x1a\xad\xa9\xe0\xae\x68\xd6\x2c\x8f\xeb\xb5\x28\x21\x95\x03\x4a\x59\x8b\x9b\x66\x60\x7d\x05\x9b\x38\xe2\x35\x48\xf8\x69\x36\x62\x99\xc3\xc3\xb1\x19\x2b\xe2\x26\x8e\x22\xc5\xcc\x5a\x09\xa8\x97\x26\x3f\x47\x62\x75\x9a\xbc\xd0\x98\x4b\x70\x09\x15\x28\x0a\xaf\x06\xb8\xc9\x04\x64\x16\x47\xdb\xd8\x23\x0b\xde\xc4\x5b\xab\xd6\x95\x75\x16\xf0\xe5\xaa\x61\x4b\x26\x8c\xb6\x84\x69\x94\x29\xe0\xc2\x30\x85\x41\xbc\x5f\x39\x82\x4d\x33\xe7\x77\x94\xd1\x71\xa1\x81\x54\x66\x8e\xd7\xdf\x0b\xa5\x17\x45\xf3\xf6\xd7\x77\x21\x3f\x17\xea\xb9\x9b\x7d\x1e\xd3\x8e\x54\x7a\x0f\x5c\xe6\xbf\x2b\x6e\x98\xca\xac\x61\xdd\x97\x93\xeb\x7e\x82\x72\x94\x52\xdc\xe5\xbf\xae\xa5\x61\xa9\xcc\xbd\xc4\x99\x17\xec\x3f\xc5\xf2\x51\xd1\xda\xf9\x71\xe1\x8e\x86\xd2\x85\xf4\xd2\xbb\xa2\xe9\x90\x36\xdb\x20\x04\xb4\x51\x13\x90\x9f\x31\x07\xdd\x15\x4d\x9e\x92\xbd\x32\x1b\x1b\x3f\xc9\xcf\xfb\xbc\x3d\x0c\xbe\x17\xd7\xb0\x5c\x6b\x03\xb7\x0c\x0a\x67\xf3\x64\x82\x14\xc9\xe5\x47\x12\x86\xb1\x84\x9c\xb2\xd6\x4d\x32\xef\xe2\x13\x0d\xb2\xcf\xe6\x8a\xdd\x31\xa5\x31\x88\x07\x2b\xc5\x47\xf3\xec\xa9\x98\xdd\x89\xf5\x30\x26\x77\x51\x1f\x13\xc6\x1a\xe1\xcd\x5a\x94\x29\x65\x7e\x67\x3b\x82\xc3\xf1\xe7\x4b\x85\xdf\x44\xa5\xb7\x46\x4e\xba\x51\x2f\x47\xb9\x56\x5a\x2a\x7d\x2d\x3f\x28\x56\xf1\xb2\x30\x4c\xa7\x9d\x1f\xfa\x5c\x26\x50\xd4\x86\xa9\x09\xdc\xb2\x5a\x2a\x06\x47\xa7\x16\x79\x42\x3b\xd5\x04\x78\xf5\xa6\x27\xf8\xc7\x4f\xc8\x22\xd5\x70\xa4\xbf\x34\xf9\x15\x6b\xec\x5e\x6e\x23\xfa\xae\x50\xb0\x6a\x39\xee\x83\xec\x6d\x6c\xa5\x63\x76\x20\x57\x1a\xe3\xab\xe2\xa5\x81\xc4\x4a\x94\x40\x6a\x93\x78\xf2\xf6\x3a\x81\xe4\xdd\x75\x92\x41\x42\x32\xb6\x33\xef\x70\xe6\xed\xb5\xdb\x77\xd1\x8c\xb8\xfd\x11\x4d\xd8\x6e\x31\x39\x09\xde\x58\x1b\xee\x4c\x62\x30\xad\x59\x0f\xa4\xaf\x00\x58\xe9\x3f\x7e\x22\xc5\x27\x90\xe7\x79\x6f\x79\x58\xad\x5a\x03\x5b\x7c\x5e\x07\xe1\xbe\xe3\xcf\x13\xe7\xce\x28\x8a\x3a\x26\x33\x40\x32\xa7\x72\xb9\x92\x9a\x1b\xb6\xd9\x00\x17\x15\xfb\x4a\x06\x79\x45\x7a\x45\xd1\x16\x58\xa3\xd9\x77\x62\xbf\x6e\xb1\xe3\x1e\x96\x86\x19\x14\xab\x15\x13\x55\xda\x8d\x4d\x60\xaf\x5b\xf1\x47\xe7\xbf\x2f\x98\x62\x1d\x42\x4a\xe3\x91\xce\x4f\x65\xb3\x5e\x0a\x9d\xf6\xe3\x25\x9b\x38\x80\x11\xa3\x4f\x06\x9e\xb8\x38\x73\xc0\x59\x46\xf2\xda\x5f\x3d\x9d\x47\x3c\xe3\xfd\xf2\xbf\xe6\x94\x1f\xf2\xc5\xff\x8d\x0b\xd2\xc7\xad\xbe\xc7\xc0\xb1\xfd\x2f\x28\x0f\x7d\x4a\xe9\x64\x72\x1b\xcf\x87\x62\xce\x2e\x44\x2d\xb1\xa2\x2a\xa0\x94\x42\x38\x7b\x62\x5d\xe5\xaa\xab\x16\x46\x1b\xb5\x2e\x0d\x8a\xfd\xef\x85\xbe\x64\x5f\x0d\xce\x00\xfe\xdc\x4a\xd9\xe0\xef\x9b\xff\xd2\x52\x4c\x93\x45\x37\x9d\xdc\x58\xe8\x0f\x8a\xdd\x71\xb9\xd6\x16\x63\x17\x3a\x9c\x46\x8c\x2b\x53\x28\x43\xf9\xca\xd2\x77\xb9\xcb\x63\xe8\x6e\x1a\xa1\xcf\x45\x15\xc0\xee\x40\x33\x3f\x9d\xdc\x38\xad\xdd\x3c\xea\x2c\x80\x55\x73\x16\xaa\xeb\x26\x3b\x65\x2f\xce\x6c\x58\xe7\x17\x67\xd7\x38\xbf\xdd\xc2\x8d\x2b\x68\xa7\x09\x47\xfe\x94\x70\xe8\x5f\xfa\xe9\x00\xee\x26\x72\x89\xa5\xea\xca\x3c\xb4\xec\x7f\xb8\x0c\x29\x9d\x70\x8f\x96\x1f\x5f\xb0\xc8\xc0\x94\xfb\xf1\xd3\xed\x83\x61\x9b\xbf\x24\x7f\xd9\xc6\xd1\x3d\x81\xa4\x76\x36\x8b\xa3\x8a\xd5\x4c\xc1\x70\xf4\xbe\x44\xc4\xdb\x42\xb3\x7f\xfd\xe7\xfc\x92\xdd\x9f\x0b\x3c\x27\xaa\xd4\x8d\xfc\x56\xdc\x5f\x99\xca\x0e\xda\x15\x7a\xdf\x11\x2a\xf3\xd3\x46\xe2\xde\x1c\x47\x7f\xc0\x0c\x9c\xfe\x21\x8d\xfb\x32\xcb\xe9\xef\xb4\xfc\x1f\xa9\x7b\x4a\xef\xe8\x61\xbd\xb3\xaf\xda\x69\x6b\x9d\x67\x57\x3a\x2f\xae\xbb\xba\xb6\x2b\x6c\x68\x97\xe6\x35\x92\x46\x7a\x81\xb2\x67\x8c\x94\x8d\xa3\xa8\xb3\x62\x30\x18\x8d\x5b\x12\x67\x88\xbe\x46\x84\xdf\xec\xe1\x37\xd5\x76\xd5\xe3\x3f\x59\x4e\x34\xd2\x32\xfb\xab\xe5\x1a\xec\x6e\x23\x62\x97\x85\x40\x99\x2b\x8b\xe3\x8a\x86\x29\xbc\xb8\x4f\x26\x88\xbc\xa7\x10\x6f\x6d\xf8\x1f\x57\xef\x2f\x43\x67\xe0\x2a\xfa\x7e\x4f\x20\x95\xf4\xce\x05\x61\xe8\x05\xb4\x98\x2b\xcc\xd1\x92\x98\x31\xf5\xc7\xd7\xd3\x86\x89\x54\x67\x2f\x5f\x7f\xfa\x7f\x66\x59\x3a\x84\x32\xa5\x2e\x84\x3d\x19\x7d\xe8\x7a\x07\x33\x48\x2e\x2e\xff\x71\xf2\xee\xe2\xec\x8f\x0f\x27\x6f\x2f\x2e\x4f\xae\x2f\xde\x5f\x26\xae\xd4\xbb\x73\x25\xf1\x1b\xae\xb4\x79\x57\x68\x93\xd6\xf8\xd7\x04\x9a\x42\x1b\x38\xe2\xc2\x64\x90\xa2\xc0\x47\xfe\x00\x4e\x42\xda\x1c\xa0\xef\xb9\x29\x17\xf8\x57\x59\x68\x06\x16\xd3\x6b\x76\x78\x48\x24\xe8\x73\x1a\x47\x11\x52\x99\xc1\x61\x9f\x8e\xdd\x9c\xfe\xce\xb4\x2e\xe6\x6c\x0a\xc9\x87\x42\x6b\x3c\x5c\xdd\x4a\xb3\x80\x1b\x4b\xf0\x06\x0a\x51\xc1\x0d\x12\xbb\xc1\x13\xba\xeb\x8a\xb0\xfe\x46\xe2\xd6\x8f\x5e\xaf\x56\x52\x19\x56\xe5\xc9\xa4\xdb\x9e\x5c\xb1\x58\xa8\x39\x7a\x9b\x6a\x3f\x4b\x3b\x81\x04\xe9\x52\x6b\x87\x94\xc0\x1c\x8c\x80\x5d\xf9\x77\x78\x08\x47\xc1\xe8\xbf\xc1\x2b\xd4\xe6\x11\x75\x02\x7d\x6e\x3a\xc4\x1b\x90\xa2\x2f\xb3\xf3\xf2\x2d\x83\x86\x69\x0d\x66\x51\x08\xf8\x93\x29\x49\xb2\xd3\x9e\xcf\x94\xc2\x18\xc8\xaf\x98\x41\x37\x4c\x46\x5d\x9c\xf5\x77\xe1\x2e\x38\x98\x52\x6d\x51\x3f\x67\xe6\x94\xda\x46\x8c\x36\xfb\xb4\x34\x5f\x51\x1c\xc3\xbe\x9a\xfc\x94\x7e\x4f\x60\x55\x98\x05\xd6\xaa\xbe\x5e\x3f\xf2\x49\xb2\x8f\x8c\x4e\xaf\x6d\x1a\xf7\xf3\x6f\x99\xb1\x33\x8e\x12\x52\xa7\xc4\x57\x97\x58\x36\x0d\xa2\x1d\xc3\x16\x05\x95\x43\x1a\xef\x57\x4c\x59\xa5\xfa\x74\xe8\xf4\x33\x9d\x41\x5d\xe6\x96\x4d\x1c\xdf\x17\xcd\xe7\x69\x1c\xd5\x52\xc1\x1f\x13\x10\xc5\xd2\x6e\x47\xe4\x6b\xab\x05\xb2\x73\xb3\x75\x37\x35\xd0\xc7\x12\xd3\xa9\x2c\xdd\x89\xc5\x15\x4e\x5c\x0a\x3d\x41\x29\xb3\xb6\xfc\xaf\xa9\x17\x88\xba\xe0\x6f\x72\x35\xc9\x35\x83\xda\x7e\xa1\x35\xb9\x58\x33\x40\xd9\x82\x1a\x69\xa8\xb5\xfb\x3c\xb4\xd8\xad\x87\x16\x85\xfe\x11\x0f\xd9\x3a\x87\x4e\x81\x8f\xf9\x62\xc4\x09\x46\xad\x59\x28\xcf\x68\x88\x10\xc3\x3c\xcf\x33\xb7\x20\xba\x74\xd3\x6f\x32\xb6\x2e\xa2\x05\x86\x05\x8f\x4e\x20\x11\xb2\x62\x89\x6d\x66\xda\xf2\x2e\x81\xc4\x48\x53\x34\xa7\x72\x2d\xfc\xc2\xc3\x45\x42\xd8\xdb\xed\x1b\x67\xd0\x24\x1c\xdc\xe9\x42\x6e\x36\x6d\x6b\x13\x33\x64\xd0\xdd\x7c\x49\x2d\xde\x03\x3a\x38\x5b\xe7\xb6\x32\xbd\x74\xbd\x52\x2f\xb0\xc5\x43\x02\xb9\x03\xdc\xba\x84\xc1\x6b\x38\xb0\x8b\x93\x32\x28\x82\xd5\xf9\x49\x3b\xa0\xf3\x73\x61\xb0\x96\x70\xd2\xb7\x9d\xdd\x83\x3a\xc7\xe2\xcd\x9e\xa8\x0a\x55\xdc\x36\xcc\x15\xf0\xbe\xa7\x9b\xae\x14\x17\xa6\x86\xc4\x51\x67\x95\xeb\xe8\xbe\xd0\xf9\x0b\xdd\xf6\x37\xca\x16\x3f\x71\x02\xda\xd0\x3b\xa0\x10\xcc\x3a\xbe\x7e\xc9\x47\x43\x95\xfd\xf9\xa0\x3f\x7a\x50\xb7\x2a\x3a\xcc\x7e\x8b\x1a\x0e\xfc\x32\x0a\xb8\x7a\x8b\xda\x0a\x76\x3a\x03\xab\x82\x83\x4c\xce\xab\x39\x4b\x2c\xc8\xf1\x31\xb4\x50\xdb\x2d\x26\x64\xb3\x60\x54\xf6\x2a\xe6\xae\x0f\xc8\x9c\x92\x8e\xd2\x96\xc0\x76\xeb\xea\xe1\x10\xb7\x2b\x8a\xd1\xa7\x94\x7d\x1d\xb4\xaf\xb6\x6d\x54\xdd\xc4\x91\x2b\xa3\x83\xc2\xdc\x01\x94\x41\x2d\x6e\x4f\x33\x52\x88\x1d\xe9\x4f\xdb\x64\xdc\xd3\xc1\xc2\x76\x3a\x84\x29\x5b\x0a\x53\x70\x81\x5b\x94\x8d\x6f\xdc\x90\xc6\x75\xf1\x34\x3a\x5d\xce\x2d\xc2\xc7\x4f\x47\xa1\xaa\xfe\xf0\x60\x17\xcb\x4d\x1c\xb5\xa7\xa0\xf6\x8f\x4e\xa5\x76\x09\xdd\xc4\xd1\x75\xbb\x86\xb0\x4e\xf2\xe7\x01\x82\x0b\xd6\x57\xab\x3e\xe2\xaa\x4e\xff\x54\x37\xbc\x64\x4e\xee\x57\xf0\x1a\xbe\x41\x23\xef\xb1\xb4\xef\xcd\xbc\xce\x70\x4b\x9e\x33\x95\x74\xeb\x6a\x65\x76\xcc\xe8\x76\x22\xf6\x7e\xb5\x63\x4a\x04\xdf\x6e\x81\x09\x0c\x66\x0d\xc1\x95\x46\xb9\xd6\x46\x2e\xf9\x9f\xf6\x2b\x30\x9c\xc3\xb0\x67\xd9\xa3\x4e\xf4\xad\xaf\xb1\xe3\x6e\x79\xef\x08\x62\xcf\xe6\x3d\x59\xdf\xf7\xe1\x92\xdf\xb9\x59\x24\x1e\xbd\x2f\x27\x81\x6e\xb7\xe8\xe4\x9a\xcf\xd7\xaa\x2f\xaf\x45\xe1\x62\xee\xaa\xd1\x01\x52\x4a\x14\x8f\x3a\xd9\x50\xe0\x40\x1f\xd7\xa6\xb3\x53\x41\x26\x46\x88\x8a\xd5\xc5\xba\xd9\x11\xf5\x8c\x86\x93\x11\xe5\xa2\xc8\x11\x82\x1d\x7c\x57\x00\x48\x24\x74\x64\xa1\xda\xf4\x6e\x4d\x4a\xd6\x1c\x33\xac\x95\xa7\x2b\x8a\x65\xde\x36\x39\x82\xc6\xe9\x4e\xf5\x1a\x96\x1a\xb4\xd7\xa1\x9a\xb9\x4b\xe3\x01\x5c\x3b\x36\x26\xb3\xdb\xd3\x89\x80\x95\x2b\xf7\x1a\x1e\xca\x9d\xfd\xd3\xc5\xf4\x97\x35\x53\x0f\x61\x0c\x60\xca\xfa\x15\x07\x7b\x79\x4b\xae\xcc\x1b\xde\x98\xb1\x30\x20\xc3\xd2\xec\x30\x6c\x1d\xce\xde\x78\xa8\xed\x7c\x3f\x1a\x5a\x9c\x94\x66\x83\x28\x26\x61\xd1\xd8\xfd\xef\x09\x19\x3f\x1b\x06\xcb\xf7\xf9\xcc\xb1\x9b\x8d\xfa\x45\x2a\x7b\x28\x49\x93\x90\xaf\x47\xe9\x8a\x50\xc1\x9b\x24\xeb\xb9\xc0\x53\x75\xb0\x63\x7e\x68\x97\xad\x17\x2c\x48\x78\x23\x4b\x02\x0b\xb9\xef\x34\x8c\xf7\xb6\x60\xf7\x1f\xfa\x49\x2c\x11\xec\x3e\x09\x72\x90\xf7\x61\xeb\x91\x16\x05\xd7\xe7\xca\x60\xf2\xed\x8c\xec\xf9\x79\xc1\x3d\x3f\x94\xbc\xcd\x96\x87\x21\xc4\x66\xdb\x56\x9b\x2e\x0b\x52\x21\x61\x49\x0f\x16\xcf\xca\x90\xd7\xf6\x2f\x18\xc1\x9b\x49\xb7\x6a\xe8\xa4\xdf\x8b\xfc\x0e\xa5\xbf\x20\xf6\x2d\x79\xdf\x7c\x43\xe0\x89\x2f\xd4\xe8\xe4\xbc\x1a\x06\x4f\xb1\x5a\x35\x0f\x14\xad\x29\x19\xfc\x59\xbe\x70\x59\x6c\xe5\x23\x63\xf7\x14\xeb\xa7\x88\x6a\xef\xa4\x6a\x47\x5a\xc1\x90\xbc\xea\x2a\x8d\xdf\x58\xc9\xf8\x9d\xcb\xc9\x7b\x84\x36\x92\xb6\xf9\x94\x70\xb7\xdb\x5e\x65\x90\xf9\x22\xa0\x5b\x3c\x2b\xb2\x19\x25\x97\x7c\x07\x3d\x7b\xca\x40\x04\xaf\xc7\x2c\xb4\xe7\xda\x23\xeb\x43\xd9\x53\x12\x45\x4c\xd7\xe8\x6d\xe3\x66\xec\x9a\x05\xbd\xed\xa4\xde\x77\xc5\x32\x09\x60\x48\x33\xd7\x3a\xdf\x9b\x57\x1d\x40\x1c\xd1\x61\x86\xa4\x9b\x91\x43\x86\x5d\xe1\x5d\x97\x3d\x65\x25\xcb\x6b\xdc\x46\xee\x2a\xcd\x1e\x51\x46\x4c\xd3\xf5\xd5\x71\x4d\x0f\xd5\xb6\xa1\xe6\x29\xa0\xdc\x41\x1b\xbe\x6b\xc9\xe7\xed\x75\x9d\x15\xbc\xaf\x1b\x89\xd6\xc1\x76\xb7\x69\x23\x06\xcc\x32\x17\xdc\xc1\x0c\x46\xf8\x5e\xb3\x8e\x18\x93\x18\x9e\xe8\x32\x7d\xc2\x19\xd9\xb8\x9d\xa9\x57\x4e\xfd\x0d\xf6\x95\x95\x6b\xe3\x9e\x2b\x10\x9b\x42\x54\x40\x28\x1a\x0a\x50\xac\x29\x1e\x6c\x1b\xb5\x72\xb1\xd4\x6b\xad\x0f\x2a\x53\x72\x61\x7f\xe9\x74\xeb\xdd\x73\x4d\xe3\x68\xf4\xd0\x69\x23\x30\xbc\xdc\x53\xae\x3d\x34\x89\xa3\xe1\xcd\x5f\xdb\x3a\x9a\x50\x6a\xcc\xf3\xbc\x4b\xbb\x93\xd8\x27\x17\x57\x21\x0f\x72\x8b\x4b\xa0\x8f\xf6\xa5\xf6\xf6\xd0\xba\x9c\xba\x75\x49\x7c\xe2\x09\x8e\xed\x07\x59\xcb\xf1\x71\x52\xb1\xbf\xfd\x6b\xf7\x09\x98\xb9\x5c\x1d\x26\xd2\x36\xaf\x3c\x47\xbc\x38\xf2\x27\x92\xc3\xc0\x18\x1b\x7b\x48\x98\x0e\x4e\x09\x9b\x2d\x6d\x0f\x3f\x8d\x76\x08\x26\x74\x14\xa1\x0b\x1c\xf8\xf6\x2d\x8e\xa2\x61\x27\xee\x88\x06\x66\x33\x78\x45\x00\x41\x6b\xce\xce\xdb\x6f\x3b\xed\xf6\xb1\x3d\x9c\xba\xa3\x45\xc8\x2e\xda\x03\xed\x0f\x2c\x0e\xd6\xee\x7e\x25\x22\xf7\xbc\x62\x97\x86\xa5\xe9\x7a\x3d\xd1\x88\x57\xc6\xb6\x4d\xea\x90\xa1\xe5\xf2\xe0\x38\x34\x03\xcb\xa2\x9d\xf2\x07\xa9\x3c\xbc\x4d\x9a\xed\x34\x2b\x2d\x12\xfc\x0d\x5e\x8d\x22\xf6\x2e\x96\x66\x30\x30\x5f\x88\x1b\x74\x7b\x90\xca\xc4\xd7\x4a\xd6\x81\x29\x2d\x23\x87\xf9\xed\x5b\x5f\x8a\x6f\xdf\xfc\x6e\xd2\x0d\x04\x9c\x32\x38\x3c\x8c\xf7\xda\x7a\xc7\x33\x68\xb5\x7d\xc6\x6e\xa4\x60\x69\xd6\x37\xfa\x88\xcd\x47\x2b\x95\xfd\x06\x47\x25\xdb\xfc\xd2\x5b\x20\x7e\x23\xed\xd6\x50\x6f\x47\xcb\xf6\xe1\x51\x3a\xed\xb0\x42\x6b\xd0\x7b\x81\x86\x2f\xb9\x3d\x02\x53\xab\x31\x34\x27\xaa\x40\xd3\x33\xb7\x00\xfe\xe9\x75\xec\xaf\x5f\x79\xdd\x73\x62\x0f\x16\x27\x2c\xa8\xa5\x49\xc3\x7f\x73\x4b\x23\x90\xb3\x35\xe7\x3b\x84\x48\x2d\x5c\xd6\xba\xba\xed\x86\xed\x69\xaa\x75\x6b\x76\x02\x58\x01\x91\xd7\xfe\xea\xf0\x7e\xea\x9f\x10\x87\x1c\xcb\xa0\x77\x99\x3e\xd5\x3c\x9d\xa0\xf6\xfe\xd5\x47\x1c\x21\x33\xbd\x1b\x13\x27\x4d\xd3\xb5\x6c\x83\x40\xc0\x18\x64\x22\xb5\x58\x59\x97\x22\x7a\x21\x1e\xa6\xc9\x3e\x30\x19\x6f\x13\x3f\x7f\x2d\x8e\x81\xee\x5f\x7d\x71\x44\xfa\xc0\xcc\x1a\x51\x7f\x9c\x76\xfc\xed\x25\x0f\x4a\x85\x71\x82\x43\x27\x86\x8e\x1d\xf6\x52\x23\x2c\x1d\x49\xf0\x41\x38\xd8\xdc\x1c\x68\xf3\x12\x5e\x3b\x6e\x27\x18\x25\x44\x09\x76\x68\xf5\x57\x8e\x95\x49\xbc\xe4\x9f\x5c\x95\xdf\xdd\xfd\xff\x08\xa1\x96\x8c\xdb\x3d\x72\x6a\x29\xcd\x60\x59\x7c\x66\x69\x7f\xcf\x98\x04\xb2\x67\x54\x85\xf2\xae\xf4\x24\xa3\x79\x39\x70\x9c\xe4\x49\x79\xe6\x1d\x60\x69\x7f\xe4\x9f\xc0\xed\x50\x7e\x2f\x42\xa9\x2e\x65\xc5\xa6\x16\xc5\xde\x54\x9c\xba\x0b\x2a\x5a\xb9\x6d\x9d\x8d\xf3\xd9\x64\x20\x72\xeb\xd7\xf0\xf2\x7d\x06\x87\x01\xcf\x57\x9f\x72\x1a\x1f\xa2\x74\x37\xf0\x7d\x04\xd4\xb4\xfb\x44\xc7\xb7\x04\x78\x0d\x3b\xf9\xca\xc7\xf0\x6e\x22\xeb\x4c\x46\x12\xef\x24\xf2\x6d\x3c\x68\x2e\x8f\xb7\xa0\xec\x54\xd2\xf6\x9b\x79\xdd\x6f\xc3\x62\xc4\x61\x50\xa6\xae\x8b\xdb\xeb\x47\x0f\x01\x09\xe4\x00\xe1\x3b\x5e\x81\x00\x07\x75\x7e\x65\x8f\xdc\x6f\x5c\xb3\x1c\x51\x5c\x1b\x03\x91\xb6\x5b\xea\x3a\xe9\xb0\x1c\x84\xdb\x07\xfb\xe9\xee\x34\xb0\x3e\x74\xaf\x3e\x1c\x8a\x73\x7a\xc0\xc7\xb9\x9e\x6e\x3c\xa6\x44\x0c\x4f\x6e\xdd\x5b\xe1\x9c\x28\x9e\x4a\xa1\x4d\x21\xa8\xd8\x43\x0c\x1f\x10\x53\x8a\xf5\x27\x4f\x6f\xc1\x6e\x4f\x83\x6e\x2c\xba\x38\x9b\x76\x09\xab\x7d\x94\x42\x0f\x23\x82\x19\x12\xa3\x6f\x14\x07\xeb\x5e\xd3\xb4\xf7\x6b\x61\x0f\x3d\x8b\xed\x1b\xdb\xe1\x4b\xd1\xbd\x0f\x45\x23\xaa\xa8\xa9\x32\xec\x19\x6a\xf4\xb1\xa8\xf5\xb8\x36\xca\xbf\x1b\x8e\xfc\xf5\x69\x4d\x27\x02\xd2\xfc\x19\xe1\xd0\xdd\x53\x3e\x69\xff\xa9\x7b\xfa\x63\x54\x7b\xa3\x32\x72\x8d\x91\xbf\x0f\x85\x4f\xbc\x18\xed\xdd\x42\x50\xd2\x68\xe3\x32\xfd\x8f\xbd\x2f\x79\xcc\x64\x8f\xbc\x35\x79\xf2\xad\x6b\x1d\xbe\x75\xf5\xf2\xfd\xe0\xab\x8f\x56\xc6\xa3\x11\x21\x9f\xf5\x02\xa4\xf7\xe0\x35\x78\x04\x12\xbe\x02\x19\xbb\xf5\xdf\xe1\xb7\xef\xc9\xab\xef\xd2\xb9\x00\x42\xf7\x7e\x5f\xf0\x3c\x37\x14\x5c\xfc\x1c\xd5\x58\x16\x6d\x36\xcf\xcd\x3e\xbd\xe8\x71\x87\xe0\xe9\x1e\xa5\x77\xdf\x74\xef\x98\x21\xb1\xee\xce\x46\xaf\x52\xc3\xfb\x2b\xdf\xbb\xed\x99\x30\x7c\xf3\xef\x5b\xf8\xae\xc8\xf2\xf7\x50\xed\x4d\x57\xef\x02\xa7\x4f\xa6\xeb\x6a\x86\xef\x70\xe3\x36\xb7\x05\x0d\xcd\x41\x46\x8b\x07\x92\xed\x15\xea\x19\xe2\xf4\x25\x39\xdb\xf3\x24\xd7\xdf\x03\xb5\x7d\x8f\xe4\x26\x8e\x48\x93\xdd\x98\xf6\xc0\x56\xad\xf6\xed\xd8\x48\xf7\xc2\xdf\x86\xb9\xe1\x27\xe4\xc6\x64\x37\x46\x24\xdc\x57\x68\x4b\x69\xc5\x9e\xee\x3e\xad\x9c\x38\xb9\xa7\x7b\x76\xa3\x27\xf6\x22\x3b\x76\x71\x36\xdc\x91\xbe\x7f\x3f\xea\xef\x46\x83\x6d\xc8\xa6\xc8\x49\x8c\xff\xb9\xff\xcf\xa7\xbd\x5b\xf5\x7f\xfd\x77\x00\x00\x00\xff\xff\xb8\x83\x14\x44\x52\x35\x00\x00")

func templatePaginationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatePaginationTmpl,
		"template/pagination.tmpl",
	)
}

func templatePaginationTmpl() (*asset, error) {
	bytes, err := templatePaginationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/pagination.tmpl", size: 13650, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatePagination_testTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x7f\x6f\xdb\x36\x10\xfd\x5b\xfa\x14\x07\x22\x58\xe5\xc0\x61\x12\xb7\x01\xd6\x00\x06\xd6\xc6\x5e\xe1\xa1\x35\xd6\x35\x2d\xb0\x05\x45\x41\x51\x27\x89\x88\x4c\xaa\x47\x2a\xad\x21\xe8\xbb\x0f\x47\x39\x5b\xd6\x78\x1e\x86\xfe\x61\x43\xba\x77\x3f\xde\xbd\x47\xaa\xef\x4f\x8f\xd3\x2b\xd7\x6e\xc9\x54\x75\x80\xd9\xd9\xf9\xf3\x93\x96\xd0\xa3\x0d\xf0\xb3\xd2\x98\x3b\x77\x0b\x2b\xab\x25\xbc\x68\x1a\x88\x49\x1e\x18\xa7\x3b\x2c\x64\x7a\x5d\x1b\x0f\xde\x75\xa4\x11\xb4\x2b\x10\x8c\x87\xc6\x68\xb4\x1e\x0b\xe8\x6c\x81\x04\xa1\x46\x78\xd1\x2a\x5d\x23\xcc\xe4\xd9\x3d\x0a\xa5\xeb\x6c\x91\x1a\x1b\xf1\xd7\xab\xab\xe5\xfa\xdd\x12\x4a\xd3\x20\xec\x62\xe4\x5c\x80\xc2\x10\xea\xe0\x68\x0b\xae\x84\xf0\x60\x58\x20\x44\x99\x1e\x9f\x0e\x43\x9a\xf6\x3d\x14\x58\x1a\x8b\x20\x5a\x55\x19\xab\x82\x71\xf6\x53\x40\x1f\x04\xec\xf0\xa3\xf6\xb6\x82\xcb\x39\xe4\xca\x23\x1c\xc9\x2b\x67\x4b\x53\xc9\x5f\x95\xbe\x55\x15\x72\x52\xdf\x9f\xc0\x17\x13\x6a\xc0\xaf\x01\x6d\x01\x47\x20\x76\xa8\x80\xac\x25\x63\xc3\xd8\x43\x8c\x7d\x27\x5c\x93\xf4\x3d\x04\xdc\xb4\x8d\x0a\x08\xa2\x46\x55\x20\x09\x90\xf7\xed\xb8\x0d\x8f\x37\x9b\xd6\x51\x80\x2c\x4d\x44\xbe\x0d\xe8\x45\x9a\x08\x1f\x48\x3b\x7b\xc7\x8f\xdc\xcf\xd8\x4a\xa4\x69\x22\x98\xe9\x63\x72\x9c\x55\x99\x50\x77\xb9\xd4\x6e\x73\xea\x03\x61\xd0\x35\x9d\xc6\xca\x72\x7b\xaa\xbc\x47\x0a\x22\x9d\xa4\x69\xd9\x59\x0d\xd7\xe8\xc3\x55\x47\xde\xd1\xd2\x6a\x57\x18\x5b\x65\x01\x8e\x77\x73\xe4\xf5\x04\xfa\x34\x09\xf2\xb7\xce\x66\x22\x26\xe0\x02\xf9\x5f\x4c\x81\xcb\x1f\xe7\x26\xda\x59\x1f\x17\x48\x12\x53\xc0\x1c\xfa\x1e\x4c\x09\x47\x72\xb5\xb8\xde\xb6\x28\xd7\xdd\x06\xc9\x68\x18\x86\x67\xb3\xbe\x07\x6c\x7c\x64\xfd\x6c\xc6\xfb\xec\x54\x48\x92\xe4\x4e\x35\x1d\xc2\x1c\x44\xe9\x5c\xae\x48\x70\xec\x73\xe7\x02\xc7\x3a\x63\xc3\x8f\xd9\x13\xf1\x64\x92\x26\x09\xff\xee\x14\x41\xde\x95\x10\x15\x93\x2f\xbb\xb2\x44\x62\x26\x6c\xe2\xbd\x9f\xc3\x20\xc7\x35\xfb\xd5\xe2\x12\x4c\x31\x85\x0f\x3c\xe2\x12\xc6\x49\x3c\x54\xcb\x37\x8a\x7c\xad\x9a\x57\x6f\x5f\x67\x3f\xe4\x5d\xc9\xbd\x7d\x3c\x09\x5d\x29\xdf\x05\x62\x71\x38\x36\x6a\x28\x97\x9f\x3b\xd5\x64\x61\x0a\x91\xd8\x14\xfc\xcd\xd9\x47\x86\x2d\x97\x34\x68\x33\x3f\x81\x13\x38\x3f\x54\x60\x63\x81\x86\x7d\x3c\x99\x12\x12\x71\x33\x2d\xdf\xdb\xcd\xdf\xdc\xfc\xcd\xf9\xe5\x58\xb9\x6b\xbc\x76\x4b\x22\x47\xdc\x1a\x89\xf6\x51\xe4\x85\xb5\x5c\x2d\xf6\x61\x51\x01\x86\xa3\x22\x93\x34\x19\x26\xdf\x78\xbe\x76\x11\xfa\x2f\xd3\x0f\xfb\x7d\x71\xf1\xc0\xef\x8b\x8b\x7f\xf8\xfd\xff\x1c\x84\xd1\xc2\x03\xa6\x45\x1d\xb8\x78\x77\x77\xe4\x7b\x1b\x35\xcf\x1e\x3a\x79\x50\xc0\xc3\x9e\x3c\xb6\xe4\x7b\xdd\x58\x9b\x88\xec\x35\x61\xbc\x72\x2f\x55\xb1\xb2\x6d\x17\xfe\xdd\x05\xc3\x70\x3c\xb0\x37\x1f\x8d\x0d\x48\xa5\xd2\xd8\x0f\x0c\x25\x67\x5f\x73\x55\xe4\x88\xe5\x94\xdf\x84\x8e\xfb\xfc\x94\xab\xe2\x7c\xf6\x54\x8c\xb1\xdf\x9f\x7e\xd8\xea\xd9\xf3\xed\xdb\x57\xbf\xd4\x7f\x2c\x96\xdb\x37\x5f\xe6\xf3\x08\xf1\xd6\xa5\x23\xf8\x34\x85\x38\x82\x27\x90\xb2\x15\xc2\x6e\x62\x3f\x5e\x59\x02\xfd\x58\x33\x86\xf6\x1f\xe3\x58\xcc\x12\xfc\xa5\xcf\x37\xb2\x0d\x51\x05\xfe\x40\xde\x9f\x94\x3f\x03\x00\x00\xff\xff\x71\x15\x8f\x1b\x82\x06\x00\x00")

func templatePagination_testTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatePagination_testTmpl,
		"template/pagination_test.tmpl",
	)
}

func templatePagination_testTmpl() (*asset, error) {
	bytes, err := templatePagination_testTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/pagination_test.tmpl", size: 1666, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTransactionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xc1\x6e\xdb\x3a\x10\x3c\x8b\x5f\x31\x4f\xc8\xc1\x0a\x1c\x3a\x2f\xb7\x06\xf0\x21\x30\x12\x20\x40\xe0\xa2\x88\x7f\x80\x21\x57\x31\x51\x99\x54\x96\xeb\xc4\x81\xe0\x7f\x2f\x44\x49\xad\xeb\x02\xbd\xf4\x22\x81\x3b\x3b\x33\xdc\x21\xd9\x75\x8b\x4b\xb5\x8a\xed\x27\xfb\xd7\xad\xe0\xe6\xfa\xff\x2f\x57\x2d\x53\xa2\x20\x78\x30\x96\x5e\x62\xfc\x8e\xc7\x60\x35\xee\x9a\x06\xb9\x29\xa1\xc7\xf9\x9d\x9c\x56\x9b\xad\x4f\x48\x71\xcf\x96\x60\xa3\x23\xf8\x84\xc6\x5b\x0a\x89\x1c\xf6\xc1\x11\x43\xb6\x84\xbb\xd6\xd8\x2d\xe1\x46\x5f\x4f\x28\xea\xb8\x0f\x4e\xf9\x90\xf1\xa7\xc7\xd5\xfd\xfa\xf9\x1e\xb5\x6f\x08\x63\x8d\x63\x14\x38\xcf\x64\x25\xf2\x27\x62\x0d\x39\x31\x13\x26\xd2\xea\x72\x71\x3c\x2a\xd5\x75\x70\x54\xfb\x40\x28\x85\x4d\x48\xc6\x8a\x8f\xa1\xc4\xf1\xd8\x43\x42\xbb\xb6\x31\x42\x28\xb7\x64\x1c\x71\x89\x0b\x0c\xac\x2b\xf8\x1a\x81\x70\xa1\x9f\x25\xb2\x79\x25\xbd\x36\x3b\x42\x99\xde\x9a\x4c\x06\x80\xae\x43\x6d\x7c\xf3\x9b\x32\x98\xde\xf6\x9e\x29\xe1\xf9\xdb\x13\xd2\xc0\x1d\xed\xae\x40\xc1\x65\x7d\xbf\x6b\x23\x0b\x66\xaa\x28\x6d\x0c\x42\x07\x29\x55\x51\x3a\x23\xe6\xc5\x24\x5a\xa4\xb7\x66\xe1\xd8\xbf\x13\xf7\x65\x62\x8e\x9c\x4a\x55\x29\xb5\x58\xe0\x6b\x4b\x61\x73\x40\x6c\x29\x24\x18\x9c\x5a\x9b\xe0\xc0\x24\x7b\x3e\x47\x4c\xd3\x33\x47\x27\x98\x26\x86\x57\x7c\x78\xd9\xe6\x2c\x2d\x93\x11\x72\xa7\xfd\x5a\xd5\xfb\x60\x31\xb3\xb8\x5c\x35\x9e\x82\x54\xa3\xed\xcc\xca\x61\xd2\xd1\xab\xe1\x5f\x61\x76\x56\x99\x63\xd8\xbc\xde\x1c\xe6\xc8\xbb\xaf\xd0\xa9\x42\x86\x15\x6e\x97\xb0\x7a\xd0\xaa\x54\xe1\xeb\x5c\xfc\x6f\x89\xe0\x9b\xbe\xad\x18\x46\xe8\x97\xf3\xe1\x43\xcc\xaa\x38\xaa\xa2\x37\x5f\x62\x4d\x1f\x9b\xc3\xe8\xd4\x6b\xcc\x91\x75\x7e\x82\x67\x90\x1e\x26\x98\x55\x95\x9a\x94\x47\x24\xab\xab\xe3\x49\xaa\x0f\x1c\x77\x23\x3d\x07\x7c\x9a\x49\x42\xcd\x71\x07\x9b\xd5\xf2\xc1\x92\xeb\xaf\xe3\x34\xfb\x10\xd9\x1f\x3a\xff\x94\xd8\x68\x76\xbb\xc4\x99\xe2\x90\xdb\x08\x2f\xff\x1e\x5d\xe4\xa4\xd7\xf4\x31\x2b\x43\x9c\x18\x46\xa4\x7f\x73\x0e\x12\xa7\xbd\x95\x55\x8e\x78\x4a\x28\xf7\xe9\x5f\x87\x5e\xa9\xe1\x2d\x8d\x17\xf8\x47\x00\x00\x00\xff\xff\xfd\x7b\xf0\xa3\x1a\x04\x00\x00")

func templateTransactionTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateTransactionTmpl,
		"template/transaction.tmpl",
	)
}

func templateTransactionTmpl() (*asset, error) {
	bytes, err := templateTransactionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/transaction.tmpl", size: 1050, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/collection.tmpl":      templateCollectionTmpl,
	"template/enum.tmpl":            templateEnumTmpl,
	"template/node.tmpl":            templateNodeTmpl,
	"template/pagination.tmpl":      templatePaginationTmpl,
	"template/pagination_test.tmpl": templatePagination_testTmpl,
	"template/transaction.tmpl":     templateTransactionTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"collection.tmpl":      &bintree{templateCollectionTmpl, map[string]*bintree{}},
		"enum.tmpl":            &bintree{templateEnumTmpl, map[string]*bintree{}},
		"node.tmpl":            &bintree{templateNodeTmpl, map[string]*bintree{}},
		"pagination.tmpl":      &bintree{templatePaginationTmpl, map[string]*bintree{}},
		"pagination_test.tmpl": &bintree{templatePagination_testTmpl, map[string]*bintree{}},
		"transaction.tmpl":     &bintree{templateTransactionTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
